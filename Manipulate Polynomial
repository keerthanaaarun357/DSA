#include <stdio.h>
#include <stdlib.h>

struct node
{
  float coeff;
  int expo;
  struct * node link;
};

struct node * insert(struct node * head, int co, int ex)
{
  struct node * temp;
  struct node * newP = malloc(sizeof(struct node));
  newP -> coeff = co;
  newP -> expo = ex;
  newP -> link = NULL;
  if(head == NULL || ex > head -> expo)
  {
    newP -> link = head;
    head = newP;
  }
  else
  {
    temp = head;
    while(temp -> link != NULL && temp -> link -> expo >= ex)
    {
      temp = temp -> link;
    }
    newP -> link = temp -> link;
    link -> link = newP;
  }
  return head;
}

struct node * create(struct node * head)
{
  int n;
  int i;
  float coeff;
  int expo;
  printf("Enter the number of terms : \t");
  scanf("%d", &n);
  for (i = 0; i < n; i++)
  {
    printf("Enter the co-efficient for the term : \t+, i+1);
    scanf("%f", &coeff);
    printf("Enter the co-exponent for the term : \t+, i+1);
    scanf("%d", &expo);
    head = insert(head, coeff, expo);
  }
  return head;
}

void Display(struct node * head)
{
  if (head == NULL)
  {
    printf("No Polynomial\n");
  }
  else
  {
    struct node * temp = head;
    while(temp != NULL)
    {
      printf("%.0fx^%d", temp -> coeff, temp -> expo);
      if(temp != NULL)
      {
        printf(" + ");
      }
      else
      {
        printf("\n");
      }
    }
  }
}

int main()
{
  struct node * head = NULL;
  printf("Enter the Polynomial : ");
  head = create(head);
  Display(head);  
  return 0;
}
